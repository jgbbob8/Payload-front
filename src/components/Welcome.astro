---
// En la parte superior del componente/archivo .astro
interface HostingPlan {
  plan: string;
  tipo: {
    nombre: string;
  };
  // Agrega aquí otros campos que necesites
}

async function getHostingPlans() {
  try {
    const response = await fetch('https://payload-back.vercel.app/api/hostingPlans');
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    return data.docs as HostingPlan[];
  } catch (error) {
    console.error("Error fetching hosting plans:", error);
    return [];
  }
}

const hostingPlans = await getHostingPlans();
---

<div class="plans-container">
  {hostingPlans.length > 0 ? (
    hostingPlans.map((item) => (
      <div class="plan-card">
        <h2>{item.plan}</h2>
        {item.tipo && <p>Tipo: {item.tipo.nombre}</p>}
        {/* Agrega más campos según sea necesario */}
      </div>
    ))
  ) : (
    <p>No se encontraron planes disponibles</p>
  )}
</div>

<style>
  .plans-container {
    display: grid;
    gap: 1.5rem;
    padding: 2rem;
  }

  .plan-card {
    border: 1px solid #e2e8f0;
    border-radius: 0.5rem;
    padding: 1.5rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s;
  }

  .plan-card:hover {
    transform: translateY(-2px);
  }

  .plan-card h2 {
    margin-top: 0;
    color: #1e40af;
  }
</style>